# -*- coding: utf-8 -*-

import telebot
from telebot import types
import config
from dilevery import text_post
from PIL import Image
import PIL

bot = telebot.TeleBot(config.TOKEN)

user_dict = {}
hello_count = []
input_message = []

class User:
    def __init__(self, name):
        self.name = name

@bot.message_handler(commands=['id'])
def process_id(message):
    bot.send_message(message.chat.id, "–¢–≤–æ—ñ–π ID: " + str(message.from_user.id), parse_mode = 'HTML')

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    if message.chat.id == config.my_id:

        key1 = types.ReplyKeyboardMarkup(True, False)
        key1.row("–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤")
        bot.send_message(message.chat.id,
                                     "–¢–∏ —É –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é".format(
                                         message.from_user, bot.get_me()),
                                     parse_mode='html', reply_markup=key1)
        if message.text == "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤":
            key1 = types.ReplyKeyboardMarkup(True,False)
            key1.row("–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")
            key1.row("–ü–æ—Å—Ç –∑ –ø—Ä—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏")
            bot.send_message(message.chat.id,
                                     "–í–∏–±–µ—Ä–∏ –ø—É–Ω–∫—Ç!".format(
                                         message.from_user, bot.get_me()),
                                     parse_mode='html', reply_markup=key1)
        elif message.text == "–ü–æ—Å—Ç –∑ –ø—Ä—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏":
            dilevery(message.text)

        elif message.text == "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è":
            bot.register_next_step_handler(message, process_name_step)
        else:
            pass
    else:
    	bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–∞–Ω–æ–≥–æ –±–æ—Ç–∞')
    	bot.send_message(config.my_id,'–ü—Ä–∏–≤—ñ—Ç, ' + str(message.from_user.first_name) + " —Ö–æ—Ç—ñ–≤ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –±–æ—Ç–æ–º, –∞–ª–µ —è –ø–æ–ø–µ—Ä–µ–¥–∏–≤ –π–æ–≥–æ —â–æ –∑ —Ç–æ–±–æ—é –Ω–µ –≤–∞—Ä—Ç–æ –∑–≤'—è–∑—É–≤–∞—Ç–∏—Å—å üòé\n–ù–∏–∂—á–µ —è —Ç–æ–±—ñ –ø–µ—Ä–µ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –í—ñ–Ω —Ö–æ—Ç—ñ–≤ –Ω–∞–ø–∏—Å–∞—Ç–∏.")
    	bot.forward_message(config.my_id, message.chat.id, message.message_id)
    	pass

def process_name_step(message):
    bot.send_message(message.chat.id, '–ê —Ç–µ–ø–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂ —Ñ–æ—Ç–æ.')
    input_message.clear()
    chat_id = message.chat.id
    name = message.text
    user = User(name)
    user_dict[chat_id] = user
    input_message.append(str(user.name))
    if message.text == "–ü–æ—Å—Ç –∑ –ø—Ä—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏":
        callback_delivery(message)
    elif message.text == "–ú–µ–Ω—é":
        bot.send_message(message.chat.id, '–í—Ö–æ–¥–∂—É –≤ –≥–ª–∞–≤–Ω–µ –º–µ–Ω—é')
        send_welcome(message)
    elif message.text == "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è":
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç, –≤–∏–±–µ—Ä–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π –ø—É–Ω–∫—Ç")
        pass

    else:
        statup(message)
        
        #bot.send_message(config.owner, user.name, reply_markup=markup, # –ú–æ–∂–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ç–µ–∫—Å—Ç –±–µ–∑ –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è —Ü—å–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ -
                #parse_mode="Markdown") ‚Ññ –ª–∏—à–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–±–æ –∑–∞–∫–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é photo_handler
        
def dilevery(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    item1 = types.InlineKeyboardButton("üì≤‚úçüèª –ó–≤'—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url='https://t.me/YuraBossAutoUkraine')
    item2 = types.InlineKeyboardButton("üîéüöó –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥–±—ñ—Ä –∞–≤—Ç–æ", url = 'https://forms.gle/ynPfcTESRjfDdaiYA')
    item3 = types.InlineKeyboardButton("üìûüìü –ö–æ–Ω—Ç–∞–∫—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ", url = "https://bossautoukraine.com.ua/")

    markup.add(item1, item2, item3)
    bot.send_message(config.owner, text_post, reply_markup=markup,
           parse_mode="Markdown")
    bot.send_message(config.my_id, '–ü–æ—Å—Ç –∑ *–ø—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏* –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏–π!', parse_mode="Markdown")

@bot.message_handler(regexp = '–ú–µ–Ω—é')
def menu(message):
	if message.chat.id == config.my_id:
	    if message.text == "–ú–µ–Ω—é": 
	        bot.send_message(message.chat.id, '–í—Ö–æ–¥–∂—É –≤ –≥–ª–∞–≤–Ω–µ –º–µ–Ω—é')
	        send_welcome(message)
	    else:
	        statup(message)
	else:
		bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–∞–Ω–æ–≥–æ –±–æ—Ç–∞')
		bot.send_message(config.my_id,'–ü—Ä–∏–≤—ñ—Ç, ' + str(message.from_user.first_name) + " —Ö–æ—Ç—ñ–≤ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –±–æ—Ç–æ–º, –∞–ª–µ —è –ø–æ–ø–µ—Ä–µ–¥–∏–≤ –π–æ–≥–æ —â–æ –∑ —Ç–æ–±–æ—é –Ω–µ –≤–∞—Ä—Ç–æ –∑–≤'—è–∑—É–≤–∞—Ç–∏—Å—å üòé\n–ù–∏–∂—á–µ —è —Ç–æ–±—ñ –ø–µ—Ä–µ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –í—ñ–Ω —Ö–æ—Ç—ñ–≤ –Ω–∞–ø–∏—Å–∞—Ç–∏.")
		bot.forward_message(config.my_id, message.chat.id, message.message_id)
		pass

@bot.message_handler(content_types=['text', 'photo'])
def statup(message):
    if message.chat.id == config.my_id:
        if message.content_type == 'text':
            if message.chat.type == 'private':
                if message.text == "–ü–æ—Å—Ç –∑ –ø—Ä—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏":
                    callback_delivery(message)

                elif message.text == "–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è":
                    key1 = types.ReplyKeyboardMarkup(True, False)
                    key1.row("–ú–µ–Ω—é")
                    bot.send_message(message.chat.id,
                                                 "–°–ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è".format(
                                                     message.from_user, bot.get_me()),
                                                  parse_mode='html', reply_markup=key1)
                    bot.register_next_step_handler(message, process_name_step)

                elif message.text == "–ú–µ–Ω—é":
                    send_welcome(message)

                if message.text == "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤":
                    key1 = types.ReplyKeyboardMarkup(True,False)
                    key1.row("–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è")
                    key1.row("–ü–æ—Å—Ç –∑ –ø—Ä—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏")
                    bot.send_message(message.chat.id,
                                             "–í–∏–±–µ—Ä–∏ –ø—É–Ω–∫—Ç!".format(
                                                 message.from_user, bot.get_me()),
                                             parse_mode='html', reply_markup=key1)

                else:
                    pass
        if message.content_type == 'photo':
            photo_handler(message)
    else:
    	bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–∞–Ω–æ–≥–æ –±–æ—Ç–∞')
    	bot.send_message(config.my_id,'–ü—Ä–∏–≤—ñ—Ç, ' + str(message.from_user.first_name) + " —Ö–æ—Ç—ñ–≤ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –±–æ—Ç–æ–º, –∞–ª–µ —è –ø–æ–ø–µ—Ä–µ–¥–∏–≤ –π–æ–≥–æ —â–æ –∑ —Ç–æ–±–æ—é –Ω–µ –≤–∞—Ä—Ç–æ –∑–≤'—è–∑—É–≤–∞—Ç–∏—Å—å üòé\n–ù–∏–∂—á–µ —è —Ç–æ–±—ñ –ø–µ—Ä–µ—Å–ª–∞–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –í—ñ–Ω —Ö–æ—Ç—ñ–≤ –Ω–∞–ø–∏—Å–∞—Ç–∏.")
    	bot.forward_message(config.my_id, message.chat.id, message.message_id)
    	pass

def photo_handler(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    item1 = types.InlineKeyboardButton("üëâ –ó–≤'—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüëà", url='https://t.me/YuraBossAutoUkraine')
    markup.add(item1)
    key1 = types.ReplyKeyboardMarkup(True, False)
    key1.row("–ú–µ–Ω—é")
    raw = message.photo[1].file_id
    name = raw+".jpg"
    file_info = bot.get_file(raw)
    downloaded_file = bot.download_file(file_info.file_path)
    with open(name,'wb') as new_file:
        new_file.write(downloaded_file)
    img = open(name, 'rb')
    bot.send_photo(config.owner, img, input_message, ''.format(
                                     message.from_user, bot.get_me()),
                                 parse_mode='html', reply_markup=markup)
    bot.send_message(message.chat.id, '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ –≥—Ä—É–ø—É, —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏, –Ω–∞—Ç–∏—Å–Ω–∏ *"–ú–µ–Ω—é"*'.format(
                                         message.from_user, bot.get_me()),
                                     parse_mode='Markdown', reply_markup=key1)

def callback_delivery(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item4 = types.InlineKeyboardButton("–¢–ê–ö", callback_data='tak')

    markup.add(item4)

    bot.send_message(message.chat.id, '–¢–∏ –≤–ø–µ–≤–Ω–µ–Ω–∏–π?', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:            
            if call.data == 'tak':
                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton("üì≤‚úçüèª –ó–≤'—è–∑–æ–∫ –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", url='https://t.me/YuraBossAutoUkraine')
                item2 = types.InlineKeyboardButton("üîéüöó –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥–±—ñ—Ä –∞–≤—Ç–æ", url = 'https://forms.gle/ynPfcTESRjfDdaiYA')
                item3 = types.InlineKeyboardButton("üìûüìü –ö–æ–Ω—Ç–∞–∫—Ç–∏ –Ω–∞ —Å–∞–π—Ç—ñ", url = "https://bossautoukraine.com.ua/")

                markup.add(item1, item2, item3)
                bot.send_message(config.owner, text_post, reply_markup=markup,
                    parse_mode="Markdown")

                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü–æ—Å—Ç –∑ –ø—Ä–æ—Ü–µ–¥—É—Ä–æ—é –¥–æ—Å—Ç–∞–≤–∫–∏ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏–π!!",
                    reply_markup=None)     
 
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            text="–ì–æ—Ç–æ–≤–æ")

    except Exception as e:
        print(repr(e))

while True:
    try:
        bot.polling(none_stop=True)
    except OSError:
        bot.polling(none_stop=True)
